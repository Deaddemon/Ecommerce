 

postman: ------------------------
used to hit the api or test the backend if our frontend is not yet ready
 
get api: ----------------------
GET is used to request data from a specified resource.
GET requests can be cached
GET requests remain in the browser history
GET requests can be bookmarked
GET requests should never be used when dealing with sensitive data
GET requests have length restrictions
GET requests are only used to request data (not modify)
ex:
app.get('/',(req,res,next) =>{
  res.status(200).json({
    message:"hello"
  });
});

post api:--------------------------
POST is used to send data to a server to create/update a resource.
The data sent to the server with POST is stored in the request body of the HTTP request:
POST requests are never cached
POST requests do not remain in the browser history
POST requests cannot be bookmarked
POST requests have no restrictions on data length

mongoose virtuals---------------
Virtuals are document properties that do not persist or
 get stored in the MongoDB database, they only exist logically and 
 are not written to the documentâ€™s collection.
 ex: 
 userSchema.virtual('name.full')
    .get(function () {
        return this.name.first + ' ' + this.name.last;
    })
will help us to acces first and last name all together as full name


ways to exports:-----------------------------------------
const replaceStr = (str, char, replacer) => {
  const regex = new RegExp(char, "g")
  const replaced = str.replace(regex, replacer)
  return replaced
}

module.exports = { replaceStr }
// or
exports.replaceStr = replaceStr
Exporting values with just the exports keyword is a 
quick way to export values from a module. You can use 
this keyword at the top or bottom, and all it does is 
populate the module.exports object. But if you're using 
exports in a file, stick to using it throughout that file.

Using module.exports is a way of explicitly specifying 
a module's exports. And this should ideally only exist once in a
file. If it exists twice, the second declaration reassigns the
module.exports property, and the module only exports what the 
second declaration states.

multer : file upload 